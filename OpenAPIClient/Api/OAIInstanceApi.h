#import <Foundation/Foundation.h>
#import "OAIAPIResponse.h"
#import "OAICreateInstancePayload.h"
#import "OAIWebhookPayload.h"
#import "OAIApi.h"

/**
* WhatsAPI Go
* The V2 of WhatsAPI Go
*
* The version of the OpenAPI document: 2.0
* Contact: manjit@sponsorbook.io
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface OAIInstanceApi: NSObject <OAIApi>

extern NSString* kOAIInstanceApiErrorDomain;
extern NSInteger kOAIInstanceApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(OAIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Change Webhook url.
/// Changes the webhook url of an instance.
///
/// @param instanceKey Instance key
/// @param data Message data
/// 
///  code:200 message:"Success",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:404 message:"Instance not found",
///  code:500 message:"Internal Server Error"
///
/// @return OAIAPIResponse*
-(NSURLSessionTask*) changeWebhookUrlWithInstanceKey: (NSString*) instanceKey
    data: (OAIWebhookPayload*) data
    completionHandler: (void (^)(OAIAPIResponse* output, NSError* error)) handler;


/// Creates a new instance key.
/// This endpoint is used to create a new WhatsApp Web instance.
///
/// @param data Instance data
/// 
///  code:200 message:"Success",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:404 message:"Instance not found",
///  code:500 message:"Internal Server Error"
///
/// @return OAIAPIResponse*
-(NSURLSessionTask*) createInstanceWithData: (OAICreateInstancePayload*) data
    completionHandler: (void (^)(OAIAPIResponse* output, NSError* error)) handler;


/// Delete Instance.
/// Deletes the instance with the provided key.
///
/// @param instanceKey Instance key
/// 
///  code:200 message:"Success",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:404 message:"Instance not found",
///  code:500 message:"Internal Server Error"
///
/// @return OAIAPIResponse*
-(NSURLSessionTask*) deleteInstanceWithInstanceKey: (NSString*) instanceKey
    completionHandler: (void (^)(OAIAPIResponse* output, NSError* error)) handler;


/// Get contacts.
/// Fetches the list of contacts in the instance.
///
/// @param instanceKey Instance key
/// 
///  code:200 message:"Success",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:404 message:"Instance not found",
///  code:500 message:"Internal Server Error"
///
/// @return OAIAPIResponse*
-(NSURLSessionTask*) getContactsWithInstanceKey: (NSString*) instanceKey
    completionHandler: (void (^)(OAIAPIResponse* output, NSError* error)) handler;


/// Get Instance.
/// Returns the instance data of single instance with connection status.
///
/// @param instanceKey Instance key
/// 
///  code:200 message:"Success",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:404 message:"Instance not found",
///  code:500 message:"Internal Server Error"
///
/// @return OAIAPIResponse*
-(NSURLSessionTask*) getInstanceWithInstanceKey: (NSString*) instanceKey
    completionHandler: (void (^)(OAIAPIResponse* output, NSError* error)) handler;


/// Get QrCode.
/// Returns the qrcode in the base64 format.
///
/// @param instanceKey Instance key
/// 
///  code:200 message:"Success",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:404 message:"Instance not found",
///  code:500 message:"Internal Server Error"
///
/// @return OAIAPIResponse*
-(NSURLSessionTask*) getQrCodeWithInstanceKey: (NSString*) instanceKey
    completionHandler: (void (^)(OAIAPIResponse* output, NSError* error)) handler;


/// Get all instances.
/// Fetches the list of all Instances with login status.
///
/// 
///  code:200 message:"Success",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:404 message:"Instance not found",
///  code:500 message:"Internal Server Error"
///
/// @return OAIAPIResponse*
-(NSURLSessionTask*) listInstancesWithCompletionHandler: 
    (void (^)(OAIAPIResponse* output, NSError* error)) handler;


/// Logout Instance.
/// Logouts of the instance with the provided key.
///
/// @param instanceKey Instance key
/// 
///  code:200 message:"Success",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:404 message:"Instance not found",
///  code:500 message:"Internal Server Error"
///
/// @return OAIAPIResponse*
-(NSURLSessionTask*) logoutInstanceWithInstanceKey: (NSString*) instanceKey
    completionHandler: (void (^)(OAIAPIResponse* output, NSError* error)) handler;



@end
