#import <Foundation/Foundation.h>
#import "OAIAPIResponse.h"
#import "OAIButtonMessagePayload.h"
#import "OAIButtonMessageWithMediaPayload.h"
#import "OAIContactMessagePayload.h"
#import "OAIListMessagePayload.h"
#import "OAILocationMessagePayload.h"
#import "OAIPollMessagePayload.h"
#import "OAISendAudioRequest.h"
#import "OAISendDocumentRequest.h"
#import "OAISendImageRequest.h"
#import "OAISendMediaPayload.h"
#import "OAISendVideoRequest.h"
#import "OAITemplateButtonPayload.h"
#import "OAITemplateButtonWithMediaPayload.h"
#import "OAITextMessage.h"
#import "OAIUploadMediaRequest.h"
#import "OAIApi.h"

/**
* WhatsAPI Go
* The V2 of WhatsAPI Go
*
* The version of the OpenAPI document: 2.0
* Contact: manjit@sponsorbook.io
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface OAIMessageSendingApi: NSObject <OAIApi>

extern NSString* kOAIMessageSendingApiErrorDomain;
extern NSInteger kOAIMessageSendingApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(OAIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Send raw audio.
/// Sends a audio message by uploading to the WhatsApp servers every time. This is not recommended for bulk sending.
///
/// @param instanceKey Instance key
/// @param to The recipient&#39;s number
/// @param sendAudioRequest 
/// @param caption Attached caption (optional)
/// 
///  code:200 message:"Success",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:404 message:"Instance not found",
///  code:500 message:"Internal Server Error"
///
/// @return OAIAPIResponse*
-(NSURLSessionTask*) sendAudioWithInstanceKey: (NSString*) instanceKey
    to: (NSString*) to
    sendAudioRequest: (OAISendAudioRequest*) sendAudioRequest
    caption: (NSString*) caption
    completionHandler: (void (^)(OAIAPIResponse* output, NSError* error)) handler;


/// Send a button message.
/// Sends an interactive button message to the given user. Make sure that all the button ids are unique
///
/// @param instanceKey Instance key
/// @param data Message data
/// 
///  code:200 message:"Success",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:404 message:"Instance not found",
///  code:500 message:"Internal Server Error"
///
/// @return OAIAPIResponse*
-(NSURLSessionTask*) sendButtonMessageWithInstanceKey: (NSString*) instanceKey
    data: (OAIButtonMessagePayload*) data
    completionHandler: (void (^)(OAIAPIResponse* output, NSError* error)) handler;


/// Send a button message with a media header.
/// Sends an interactive button message to the given user. This message also has media header with it. Make sure that all the button ids are unique
///
/// @param instanceKey Instance key
/// @param data Message data
/// 
///  code:200 message:"Success",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:404 message:"Instance not found",
///  code:500 message:"Internal Server Error"
///
/// @return OAIAPIResponse*
-(NSURLSessionTask*) sendButtonWithMediaWithInstanceKey: (NSString*) instanceKey
    data: (OAIButtonMessageWithMediaPayload*) data
    completionHandler: (void (^)(OAIAPIResponse* output, NSError* error)) handler;


/// Send a contact message.
/// Sends a contact (vcard) message to the given user.
///
/// @param instanceKey Instance key
/// @param data Message data
/// 
///  code:200 message:"Success",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:404 message:"Instance not found",
///  code:500 message:"Internal Server Error"
///
/// @return OAIAPIResponse*
-(NSURLSessionTask*) sendContactWithInstanceKey: (NSString*) instanceKey
    data: (OAIContactMessagePayload*) data
    completionHandler: (void (^)(OAIAPIResponse* output, NSError* error)) handler;


/// Send raw document.
/// Sends a document message by uploading to the WhatsApp servers every time. This is not recommended for bulk sending.
///
/// @param instanceKey Instance key
/// @param to The recipient&#39;s number
/// @param sendDocumentRequest 
/// @param caption Attached caption (optional)
/// 
///  code:200 message:"Success",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:404 message:"Instance not found",
///  code:500 message:"Internal Server Error"
///
/// @return OAIAPIResponse*
-(NSURLSessionTask*) sendDocumentWithInstanceKey: (NSString*) instanceKey
    to: (NSString*) to
    sendDocumentRequest: (OAISendDocumentRequest*) sendDocumentRequest
    caption: (NSString*) caption
    completionHandler: (void (^)(OAIAPIResponse* output, NSError* error)) handler;


/// Send raw image.
/// Sends a image message by uploading to the WhatsApp servers every time. This is not recommended for bulk sending.
///
/// @param instanceKey Instance key
/// @param to The recipient&#39;s number
/// @param sendImageRequest 
/// @param caption Attached caption (optional)
/// 
///  code:200 message:"Success",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:404 message:"Instance not found",
///  code:500 message:"Internal Server Error"
///
/// @return OAIAPIResponse*
-(NSURLSessionTask*) sendImageWithInstanceKey: (NSString*) instanceKey
    to: (NSString*) to
    sendImageRequest: (OAISendImageRequest*) sendImageRequest
    caption: (NSString*) caption
    completionHandler: (void (^)(OAIAPIResponse* output, NSError* error)) handler;


/// Send a List message.
/// Sends an interactive List message to the given user.
///
/// @param instanceKey Instance key
/// @param data Message data
/// 
///  code:200 message:"Success",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:404 message:"Instance not found",
///  code:500 message:"Internal Server Error"
///
/// @return OAIAPIResponse*
-(NSURLSessionTask*) sendListMessageWithInstanceKey: (NSString*) instanceKey
    data: (OAIListMessagePayload*) data
    completionHandler: (void (^)(OAIAPIResponse* output, NSError* error)) handler;


/// Send a location message.
/// Sends a location message to the given user. This is static location and does not update Note: The Address and Url fields are optional
///
/// @param instanceKey Instance key
/// @param data Message data
/// 
///  code:200 message:"Success",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:404 message:"Instance not found",
///  code:500 message:"Internal Server Error"
///
/// @return OAIAPIResponse*
-(NSURLSessionTask*) sendLocationWithInstanceKey: (NSString*) instanceKey
    data: (OAILocationMessagePayload*) data
    completionHandler: (void (^)(OAIAPIResponse* output, NSError* error)) handler;


/// Send a media message.
/// Sends a media message to the given user.
///
/// @param instanceKey Instance key
/// @param data Message data
/// 
///  code:200 message:"Success",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:404 message:"Instance not found",
///  code:500 message:"Internal Server Error"
///
/// @return OAIAPIResponse*
-(NSURLSessionTask*) sendMediaMessageWithInstanceKey: (NSString*) instanceKey
    data: (OAISendMediaPayload*) data
    completionHandler: (void (^)(OAIAPIResponse* output, NSError* error)) handler;


/// Send a Poll message.
/// Sends an interactive poll message to the given user. The poll message is a new feature that is currently in beta.
///
/// @param instanceKey Instance key
/// @param data Message data
/// 
///  code:200 message:"Success",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:404 message:"Instance not found",
///  code:500 message:"Internal Server Error"
///
/// @return OAIAPIResponse*
-(NSURLSessionTask*) sendPollMessageWithInstanceKey: (NSString*) instanceKey
    data: (OAIPollMessagePayload*) data
    completionHandler: (void (^)(OAIAPIResponse* output, NSError* error)) handler;


/// Send a template message.
/// Sends an interactive template message to the given user. Note: The valid button types are \"replyButton\", \"urlButton\", \"callButton\"
///
/// @param instanceKey Instance key
/// @param data Message data
/// 
///  code:200 message:"Success",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:404 message:"Instance not found",
///  code:500 message:"Internal Server Error"
///
/// @return OAIAPIResponse*
-(NSURLSessionTask*) sendTemplateWithInstanceKey: (NSString*) instanceKey
    data: (OAITemplateButtonPayload*) data
    completionHandler: (void (^)(OAIAPIResponse* output, NSError* error)) handler;


/// Send a template message with media.
/// Sends an interactive template message with a media header to the given user. Note: The valid button types are \"replyButton\", \"urlButton\", \"callButton\"
///
/// @param instanceKey Instance key
/// @param data Message data
/// 
///  code:200 message:"Success",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:404 message:"Instance not found",
///  code:500 message:"Internal Server Error"
///
/// @return OAIAPIResponse*
-(NSURLSessionTask*) sendTemplateWithMediaWithInstanceKey: (NSString*) instanceKey
    data: (OAITemplateButtonWithMediaPayload*) data
    completionHandler: (void (^)(OAIAPIResponse* output, NSError* error)) handler;


/// Send a text message.
/// Sends a text message to the given user.
///
/// @param instanceKey Instance key
/// @param data Message data
/// 
///  code:200 message:"Success",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:404 message:"Instance not found",
///  code:500 message:"Internal Server Error"
///
/// @return OAIAPIResponse*
-(NSURLSessionTask*) sendTextMessageWithInstanceKey: (NSString*) instanceKey
    data: (OAITextMessage*) data
    completionHandler: (void (^)(OAIAPIResponse* output, NSError* error)) handler;


/// Send raw video.
/// Sends a video message by uploading to the WhatsApp servers every time. This is not recommended for bulk sending.
///
/// @param instanceKey Instance key
/// @param to The recipient&#39;s number
/// @param sendVideoRequest 
/// @param caption Attached caption (optional)
/// 
///  code:200 message:"Success",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:404 message:"Instance not found",
///  code:500 message:"Internal Server Error"
///
/// @return OAIAPIResponse*
-(NSURLSessionTask*) sendVideoWithInstanceKey: (NSString*) instanceKey
    to: (NSString*) to
    sendVideoRequest: (OAISendVideoRequest*) sendVideoRequest
    caption: (NSString*) caption
    completionHandler: (void (^)(OAIAPIResponse* output, NSError* error)) handler;


/// Upload media.
/// Uploads media to WhatsApp servers and returns the media keys. Store the returned media keys, as you will need them to send media messages
///
/// @param instanceKey Instance key
/// @param type Media type
/// @param uploadMediaRequest 
/// 
///  code:200 message:"Success",
///  code:400 message:"Bad Request",
///  code:401 message:"Unauthorized",
///  code:404 message:"Instance not found",
///  code:500 message:"Internal Server Error"
///
/// @return OAIAPIResponse*
-(NSURLSessionTask*) uploadMediaWithInstanceKey: (NSString*) instanceKey
    type: (NSString*) type
    uploadMediaRequest: (OAIUploadMediaRequest*) uploadMediaRequest
    completionHandler: (void (^)(OAIAPIResponse* output, NSError* error)) handler;



@end
